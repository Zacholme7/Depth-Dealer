/// Represents a warning generated by the application.
///
/// This struct contains information about a specific warning that occurred during the application's runtime,
/// such as when it happened, who logged it, and where in the code it was logged.
///
/// # Fields
///
/// * `timestamp` - The precise time when the warning occurred.
/// * `logger_name` - The name of the logger that captured the warning.
/// * `caller_info` - A tuple containing:
///     * `0` - The name of the file where the warning occurred.
///     * `1` - The line number in the file where the warning occurred.
///     * `2` - The name of the function where the warning occurred.
///     * `3` - Optional stack information if available.
/// * `warning_msg` - The message describing the warning.
pub struct ApplicationWarning {
    pub timestamp: f64, // when the warning occured
    pub logger_name: String, // the name of the logger
    pub caller_info: (String, u32, String, Option<String>), // filename, linenumber, function name, optional stack information
    pub warning_msg: String // mesage associated with the warning
}

impl ApplicationWarning {
    /// Returns the filename where the warning occured
    pub fn filename(&self) -> &str {
        &self.caller_info.0
    }

    /// Returns the line number wehre the warning occured
    pub fn line_number(&self) -> u32 {
        self.caller_info.1
    }

    /// Returns the name of the function where the warning occured
    pub fn function_name(&self) -> &str {
        &self.caller_info.2
    }

    /// Potentially returns stack information where the warning occured
    pub fn stack_info(&self) -> Option<&String> {
        self.caller_info.3.as_ref()
    }
}
